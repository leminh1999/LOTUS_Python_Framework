from A2_GetLink_ImportList import *
import shutil

#L·ªõp task2CheckCommnetInfo hi·ªÉn th·ªã th√¥ng tin c·ªßa video sau c√πng
class task2CheckCommnetInfo:
  likeFinal = ""
  commentFinal = ""
  shareFinal = ""
  htmlCode = ""
  funnyFinal = ""
  video_size = ""
      
class clipPostInfo:
  id = ""
  video_id = "0123456789"
  org_user = ""
  cus_user = ""
  post_date = ""
  video_link = ""
  like_num = ""
  comment_num = ""
  share_num = ""
  funny_num = ""
  total_score = ""
  video_local_name = ""
  comment_local_1 = ""
  comment_local_2 = ""
  comment_local_3 = ""
  comment_local_4 = ""
  comment_local_5 = ""
  comment_merge_name = ""
  video_pc_merge_name = ""
  video_mobile_merge_name = ""
  task2_check_time = ""
  update_time = ""

def debugPrintClipPostInfo():
  logger.debug("video_id   = %s",clipPostInfo.video_id)
  logger.debug("org_user   = %s",clipPostInfo.org_user)
  logger.debug("video_link = %s",clipPostInfo.video_link)

class Task2GetComment:
  avatar1stPos = ""
  avatarLastPos = ""
  
  def get999Post():
    sql = "SELECT * FROM tiktop_day WHERE task2_check_time = "+str(-999)+" LIMIT 1"
    mycursor.execute(sql)
    readData = mycursor.fetchall()[0] #Fetch l√† l·∫•y d√≤ng ƒë·∫ßu ti√™n
    logger.info(readData)   
    clipPostInfo.id                      = readData[0]
    clipPostInfo.video_id                = readData[1]
    clipPostInfo.org_user                = readData[2]
    clipPostInfo.cus_user                = readData[3]
    clipPostInfo.post_date               = readData[4]
    clipPostInfo.video_link              = readData[5]
    clipPostInfo.like_num                = readData[6]
    clipPostInfo.comment_num             = readData[7]
    clipPostInfo.share_num               = readData[8]
    clipPostInfo.funny_num               = readData[9]
    clipPostInfo.total_score             = readData[10]
    clipPostInfo.video_local_name        = readData[11]
    clipPostInfo.comment_local_1         = readData[12]
    clipPostInfo.comment_local_2         = readData[13]
    clipPostInfo.comment_local_3         = readData[14]
    clipPostInfo.comment_local_4         = readData[15]
    clipPostInfo.comment_local_5         = readData[16]
    clipPostInfo.comment_merge_name      = readData[17]
    clipPostInfo.video_pc_merge_name     = readData[18]
    clipPostInfo.video_mobile_merge_name = readData[19]
    clipPostInfo.task2_check_time        = readData[20]
    clipPostInfo.update_time             = readData[21]
    if clipPostInfo.id == "": #Kh√¥ng c√≤n video -999
      return 0
    else: #C√≤n video -999
      #C·∫≠p nh·∫≠t tr·∫°ng th√°i c·ªßa d√≤ng l√† ƒëang checking
      sql = "UPDATE tiktop_day SET task2_check_time = %s,update_time = %s WHERE video_id = "+str(clipPostInfo.video_id)+""
      val = ("CHECKING",clipPostInfo.update_time)
      mycursor.execute(sql, val)
      mydb.commit()
      return 1



  def goToViewCommentPage():
    #Di chuy·ªÉn mouse ƒë·∫øn v·ªã tr√≠ click
    GUI.click(600,500)  # Images/11b.png
    LotusLib.delay(500)
    GUI.click(600,500)  # Images/11b.png
    LotusLib.wait3Color((1341,240),(193,193,193),20,(1341,242),(193,193,193),20,(1341,244),(193,193,193),20,30) #Ch·ªù m√†n h√¨nh load xong Images/12b.png
    allAvatarLoaded = 0
    checkTime = 0
    while checkTime < 30 and allAvatarLoaded == 0:
      for i in range (500,900):
        if LotusLib.getColor(857,i)[0] == 255:
          continue # Ch∆∞a load ƒë∆∞·ª£c c√°c avatar
        else:
          allAvatarLoaded = 1
          break # ƒê√£ load xong c√°c avatar
      checkTime += 1
      LotusLib.delay(100)

  #Chi·∫øn thu·∫≠t b·∫Øt comment:
  # Images/13b.png
  # 1. T√¨m v·ªã tr√≠ comment ƒë·∫ßu ti√™n
  # 2. Click n√∫t xu·ªëng s·ªë 2 ƒë·ªÉ cu·ªôn avatar l√™n tr√™n. Ch√∫ √Ω t√≠nh to√°n ƒë·ªÉ avatar kh√¥ng v∆∞·ª£t qu√° s·ªë 3. M·ªói l·∫ßn cu·ªôn s·∫Ω tr√¥i 40px.
  # 3. T·ª´ v·ªã tr√≠ s·ªë 4 ƒë·∫øm l√™n tr√™n ƒë·ªÉ t√¨m comment cu·ªëi c√πng (N·∫øu ph√°t hi·ªán n·ªØa avata c≈©ng OK)
  # 4. V√πng b·∫Øt comment s·∫Ω l√† t·ª´ v·ªã tr√≠ comment ƒë·∫ßu ti√™n ƒë·∫øn comment g·∫ßn cu·ªëi. L∆∞u h√¨nh n√†y v√†o bi·∫øn t·∫°m ch·ªù check ƒëi·ªÉm c∆∞·ªùi v√† c√°c ti√™u ch√≠ kh√°c.
  def captureCommentPic():
    num2Pos = 1341,964 #V·ªã tr√≠ n√∫t nh·∫•n xu·ªëng comment. M·ªói l·∫ßn nh·∫•n tr√¥i 40px
    num3Pos = 857,217  #V·ªã tr√≠ d√≤ng comment s·∫Ω b·ªã ·∫©n khi cu·ªôn xu·ªëng
    # 1. T√¨m v·ªã tr√≠ comment ƒë·∫ßu ti√™n
    avatar1stPos = Task2GetComment.findCommentPos4(1)[0] #Nh·∫≠n v·ªã tr√≠ c·ªßa first comment
    # 2. Click n√∫t xu·ªëng s·ªë 2 ƒë·ªÉ cu·ªôn avatar l√™n tr√™n. Ch√∫ √Ω t√≠nh to√°n ƒë·ªÉ avatar kh√¥ng v∆∞·ª£t qu√° s·ªë 3. M·ªói l·∫ßn cu·ªôn s·∫Ω tr√¥i 40px.
    print(avatar1stPos)
    if avatar1stPos != False: # C√≥ ph√°t hi·ªán ra avatar th·ª© 1
      scrollPos = [1341,240]
      while avatar1stPos[1] - 40 > num3Pos[1]:
        avatar1stPos[1] -= 40
        GUI.click(num2Pos) #Nh·∫•n n√∫t ch·∫°y xu·ªëng 40px
        scrollPos = Task2GetComment.__waitScrollDown(checkX=scrollPos[0],rangeYLow=scrollPos[1],rangeYHigh=950,timeout_s=15)
        logger.info("Scrollbar Top Position: %s",scrollPos)
      logger.info("First comment pos: %s",avatar1stPos)
    # 3. T·ª´ v·ªã tr√≠ s·ªë 4 ƒë·∫øm l√™n tr√™n ƒë·ªÉ t√¨m comment cu·ªëi c√πng (N·∫øu ph√°t hi·ªán n·ªØa avata c≈©ng OK)
    avatarLastPos = Task2GetComment.findCommentPos4(0)[1] #Nh·∫≠n v·ªã tr√≠ c·ªßa last comment
    logger.info("Last comment pos: %s",avatarLastPos)
    # 4. V√πng b·∫Øt comment s·∫Ω l√† t·ª´ v·ªã tr√≠ comment ƒë·∫ßu ti√™n ƒë·∫øn comment g·∫ßn cu·ªëi. L∆∞u h√¨nh n√†y v√†o bi·∫øn t·∫°m ch·ªù check ƒëi·ªÉm c∆∞·ªùi v√† c√°c ti√™u ch√≠ kh√°c.
    logger.info("Save temp image tempComment.png")
    pyautogui.screenshot(region=(820,avatar1stPos[1], 500, avatarLastPos[1]-avatar1stPos[1]-1)).save(clipPostInfo.video_id+".png")
    Task2GetComment.avatar1stPos  = avatar1stPos
    Task2GetComment.avatarLastPos = avatarLastPos


  def checkFunnyPoint ():
    for i in range (0,50):
      GUI.click(1340,950)
      LotusLib.delay(100)
    
    htmlCode = Task1GetLink.getCode()
    GUI.move(1255,180) #Di chuy·ªÉn chu·ªôt qua ch·ªó kh√°c ƒë·ªÉ tr√°nh m√†n h√¨nh xanh
    x = htmlCode.split("comment-item")
    htmlCode100 = ""
    
    if len(x) <= 5:
      htmlCode100 = ""
    else:
      if len(x) >= 101:
        for i in range (1,102):
          htmlCode100 += x[i]
      else:
        for i in range (1,len(x)):
          htmlCode100 += x[i]
    
    funny_total_point = 0
    funny_total_point += htmlCode100.count("ü§£") * int("50")
    funny_total_point += htmlCode100.count("üòÖ") * int("30")
    funny_total_point += htmlCode100.count("üòÇ") * int("30")
    funny_total_point += htmlCode100.count("üòÅ") * int("20")
    funny_total_point += htmlCode100.count("üòù") * int("20")
    funny_total_point += htmlCode100.count("üòÑ") * int("20")
    logger.info("ü§£ %s - üòÖ %s - üòÇ %s - üòÅ %s - üòù %s - üòÑ %s",htmlCode100.count("ü§£"),htmlCode100.count("üòÖ"),htmlCode100.count("üòÇ"),htmlCode100.count("üòÅ"),htmlCode100.count("üòù"),htmlCode100.count("üòÑ"))
    logger.info("Comment num: %s - Funny Point: %s",len(x)-1,funny_total_point)
    clipPostInfo.funny_num = str(funny_total_point)
    return funny_total_point
    
  def calScoreAndUploadMySQL():
    like_num    = LotusLib.convertHumanNumToInt(clipPostInfo.like_num)
    comment_num = LotusLib.convertHumanNumToInt(clipPostInfo.comment_num)
    share_num   = LotusLib.convertHumanNumToInt(clipPostInfo.share_num)
    funny_num   = LotusLib.convertHumanNumToInt(clipPostInfo.funny_num)
    
    #T√≠nh ƒëi·ªÉm cho Like
    if int(like_num) < int(tikTopConfig.min_like):
      likeScore = 0
    else:
      if int(like_num) >= int(tikTopConfig.max_like):
        likeScore = int(tikTopConfig.max_like) * float(tikTopConfig.hs_like)
      else:
        likeScore = int(like_num) * float(tikTopConfig.hs_like)
    #T√≠nh ƒëi·ªÉm cho Comment
    if int(comment_num) < int(tikTopConfig.min_comment):
      commentScore = 0
    else:
      if int(comment_num) >= int(tikTopConfig.max_comment):
        commentScore = int(tikTopConfig.max_comment) * float(tikTopConfig.hs_comment)
      else:
        commentScore = int(comment_num) * float(tikTopConfig.hs_comment)
    #T√≠nh ƒëi·ªÉm cho Share
    if int(share_num) < int(tikTopConfig.min_share):
      shareScore = 0
    else:
      if int(share_num) >= int(tikTopConfig.max_share):
        shareScore = int(tikTopConfig.max_share) * float(tikTopConfig.hs_share)
      else:
        shareScore = int(share_num) * float(tikTopConfig.hs_share)
    #T√≠nh ƒëi·ªÉm cho Funny
    if int(funny_num) < int(tikTopConfig.min_funny):
      funnyScore = 0
    else:
      if int(funny_num) >= int(tikTopConfig.max_funny):
        funnyScore = int(tikTopConfig.max_funny) * float(tikTopConfig.hs_funny)
      else:
        funnyScore = int(funny_num) * float(tikTopConfig.hs_funny)

    #Update l√™n MySQL
    if int(clipPostInfo.funny_num) < int(tikTopConfig.min_funny):
      clipPostInfo.total_score = 0
      if os.path.exists(clipPostInfo.video_id+".png"):
        os.remove(clipPostInfo.video_id+".png")
    else:
      # Di chuy·ªÉn file h√¨nh v√†o th∆∞ m·ª•c
      source = clipPostInfo.video_id+".png"
      dest = '../PostData/Vol'+tikTopConfig.vol_num
      shutil.move(source, dest)
      # T√≠nh ƒëi·ªÉm t·ªïng
      clipPostInfo.total_score = likeScore + commentScore + shareScore + funnyScore
      point1 = LotusLib.getColor(1200,162) # Images/15s.png . M√†u ch∆∞a Follow (254,44,85) -> N·∫øu Follow (202,202,206)
      if point1[0] > 240 and point1[1] < 80 and point1[2] < 120: #ƒêang l√† n√∫t Follow m√†u h·ªìng -> Ch∆∞a follow
        logger.info("Click n√∫t Follow - TotalScore: %s",clipPostInfo.total_score)
        GUI.click(1255,180) #Click v√†o n√∫t Follow
    sql = "UPDATE tiktop_day SET funny_num = %s,total_score = %s WHERE video_id = "+str(clipPostInfo.video_id)+""
    val = (clipPostInfo.funny_num, clipPostInfo.total_score)
    mycursor.execute(sql, val)
    mydb.commit()
    
  def updateTaskMonTask1Task2(task1_flag=1, task2_flag=0):
    sql = "UPDATE tiktop_task_mon SET task1_running_flag = %s,task2_running_flag = %s WHERE id = '0'"
    val = (task1_flag,task2_flag)
    mycursor.execute(sql, val)
    mydb.commit()

  def updateTaskMonTask3Task4(task3_flag=1, task4_flag=0):
    sql = "UPDATE tiktop_task_mon SET task3_running_flag = %s,task4_running_flag = %s WHERE id = '0'"
    val = (task3_flag,task4_flag)
    mycursor.execute(sql, val)
    mydb.commit()

  def __waitScrollDown (checkX, rangeYLow, rangeYHigh,timeout_s):
    timeCnt = time.time();
    while (time.time() - timeCnt) < timeout_s: #Ch∆∞a h·∫øt th·ªùi gian time out
      # logger.info("DEBUG1: %s",(time.time() - timeCnt))
      for checkY in range (rangeYLow, rangeYHigh+1):
        # logger.info("DEBUG2: %s",checkY)
        if LotusLib.checkColorWithCapture((checkX,checkY),(192,192,192),10) == True: #T√¨m ƒë·ªânh m√†u x√°m c·ªßa scrollbar.
          if checkY != rangeYLow: #Ch·ª©ng t·ªè ƒë√£ nh·∫£y scrollbar -> Tr·∫£ v·ªÅ v·ªã tr√≠ scrollbar m·ªõi.
            # logger.info("DEBUG3: %s",checkY)
            return checkX,checkY
          else:
            # logger.info("DEBUG4: %s",checkY)
            LotusLib.delay(100)
            break
    # logger.info("-----------------: %s",checkY)
    return checkX,rangeYLow

  # def findCommentPos1 (fromPosY, toPosY): # ƒêi·ªÅu ki·ªán: T√¨m t·ª´ v·ªã tr√≠ d∆∞·ªõi l√™n -> fromPosY > toPosY
  #   capScreen = GUI.screenshot()
  #   i = 0
  #   searchRange = fromPosY - toPosY + 1
  #   while i < searchRange:
  #     pos = 857,fromPosY-i
  #     color = 255,255,255
  #     if LotusLib.checkColorWithoutCapture(capScreen,pos,color,5) == True: # ƒêi·ªÉm ki·ªÉm tra l√† m√†u tr·∫Øng c·ªßa n·ªÅn
  #       i += 1
  #     else: #ƒêi·ªÉm ki·ªÉm tra c√≥ m√†u
  #       return [857,fromPosY-i-40]
  #   return False

  def findCommentPos4(findOnlyFirstCmt=0):
    startPoint = [1288,400]
    capScreen = GUI.screenshot()
    avatar1stPos = ""
    avatarLastPos = ""
    i = 0
    while i < 572:
      timPos = [startPoint[0],startPoint[1]+i]
      if capScreen.getpixel((timPos[0]   ,timPos[1]   ))[0] < 145 and\
         capScreen.getpixel((timPos[0]- 7,timPos[1]- 9))[0] < 145 and\
         capScreen.getpixel((timPos[0]+ 8,timPos[1]- 9))[0] < 145 and\
         capScreen.getpixel((timPos[0]   ,timPos[1]-12))[0] < 145: #X√°c ƒë·ªãnh c√≥ 1 tr√°i tim qua 4 ƒëi·ªÉm: ƒê√°y, tr√°i, ph·∫£i v√† tr√™n Images/14s.png
        if avatar1stPos == "":
          avatar1stPos = [timPos[0],timPos[1]-40]
          if findOnlyFirstCmt == 1:
            return avatar1stPos,avatar1stPos
        avatarLastPos = [timPos[0],timPos[1]-40]
        i += 80
      else:
        i += 1
    if avatar1stPos != "" and avatarLastPos != "":
      return avatar1stPos,avatarLastPos
    else:
      logger.critical("KH√îNG T√åM ƒê∆Ø·ª¢C COMMENT!!!")
      return exit()

  # def findCommentPos2 (fromPosY, toPosY): # ƒêi·ªÅu ki·ªán: T√¨m t·ª´ v·ªã tr√≠ d∆∞·ªõi l√™n -> fromPosY > toPosY
  #   firstPointRecorded = 0
  #   secondPointRecorded = 0
  #   capScreen = GUI.screenshot()
  #   i = 0
  #   searchRange = fromPosY - toPosY + 1
    
  #   if LotusLib.checkColorWithoutCapture(capScreen,(857,fromPosY),(255,255,255),5) == True: # ƒêi·ªÉm ki·ªÉm tra l√† m√†u tr·∫Øng c·ªßa n·ªÅn
  #     while i < searchRange:
  #       pos = 857,fromPosY-i
  #       color = 255,255,255
  #       if LotusLib.checkColorWithoutCapture(capScreen,pos,color,5) == True: # ƒêi·ªÉm ki·ªÉm tra l√† m√†u tr·∫Øng c·ªßa n·ªÅn
  #         i += 1
  #       else: #ƒêi·ªÉm ki·ªÉm tra c√≥ m√†u
  #         return [857,fromPosY-i-40]
  #     return False
  #   else:
  #     while i < searchRange:
  #       pos = 857,fromPosY-i
  #       color = 255,255,255
  #       if LotusLib.checkColorWithoutCapture(capScreen,pos,color,5) == True: # ƒêi·ªÉm ki·ªÉm tra l√† m√†u tr·∫Øng c·ªßa n·ªÅn
  #         return [857,fromPosY-i-20+1] #Tr·ª´ 20 ƒë·ªÉ tr√°nh c√°c avatar c√≥ h√¨nh tr·∫Øng
  #       else:
  #         i+=1
  #   return False
          
          
  # def findCommentPos3 (fromPosY, toPosY): # ƒêi·ªÅu ki·ªán: T√¨m t·ª´ v·ªã tr√≠ d∆∞·ªõi l√™n -> fromPosY > toPosY
  #   firstPointRecorded = 0
  #   secondPointRecorded = 0
  #   capScreen = GUI.screenshot()
  #   i = 0
  #   searchRange = fromPosY - toPosY + 1
  #   while i < searchRange:
  #     pos = 857,fromPosY-i
  #     color = 255,255,255
  #     if LotusLib.checkColorWithoutCapture(capScreen,pos,color,5) == True: # ƒêi·ªÉm ki·ªÉm tra l√† m√†u tr·∫Øng c·ªßa n·ªÅn
  #       if secondPointRecorded == 1: #Avatar ƒë√£ ƒë∆∞·ª£c b·∫Øt
  #         topAvatarPos = [857,fromPosY-i+1]
  #         return topAvatarPos
  #       else:
  #         i += 1
  #         firstPointRecorded = 0
  #         secondPointRecorded = 0
  #     else: #ƒêi·ªÉm ki·ªÉm tra c√≥ m√†u
  #       if firstPointRecorded == 0: #ƒê√¢y l√† ƒëi·ªÉm c√≥ m√†u ƒë·∫ßu ti√™n
  #         i += 39
  #         firstPointRecorded = 1
  #       else: #ƒê√¢y l√† ƒëi·ªÉm c√≥ m√†u th·ª© 2
  #         i +=1
  #         secondPointRecorded = 1
  #   return False
          
  #   # # 2. Click n√∫t xu·ªëng s·ªë 2 ƒë·ªÉ cu·ªôn avatar l√™n tr√™n. Ch√∫ √Ω t√≠nh to√°n ƒë·ªÉ avatar kh√¥ng v∆∞·ª£t qu√° s·ªë 3. M·ªói l·∫ßn cu·ªôn s·∫Ω tr√¥i 40px.
  #   # commentMovePosY = TopAvatarPos[1]
  #   # if commentMovePosY - 40 >= num3Pos[1]:
  #   #   commentMovePosY -= 40
  #   #   GUI.click(num2Pos) #Click n√∫t xu·ªëng ƒë·ªÉ ƒë·ªçc comment b√™n d∆∞·ªõi.
      
        
      
    
    
    


